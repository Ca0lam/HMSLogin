#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HMSLogin
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HospitalMS")]
	public partial class HMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblBedDetail(tblBedDetail instance);
    partial void UpdatetblBedDetail(tblBedDetail instance);
    partial void DeletetblBedDetail(tblBedDetail instance);
    partial void InserttblWardDetail(tblWardDetail instance);
    partial void UpdatetblWardDetail(tblWardDetail instance);
    partial void DeletetblWardDetail(tblWardDetail instance);
    partial void InserttblBillingDetail(tblBillingDetail instance);
    partial void UpdatetblBillingDetail(tblBillingDetail instance);
    partial void DeletetblBillingDetail(tblBillingDetail instance);
    partial void InserttblDeptDetail(tblDeptDetail instance);
    partial void UpdatetblDeptDetail(tblDeptDetail instance);
    partial void DeletetblDeptDetail(tblDeptDetail instance);
    partial void InserttblDoctorDetail(tblDoctorDetail instance);
    partial void UpdatetblDoctorDetail(tblDoctorDetail instance);
    partial void DeletetblDoctorDetail(tblDoctorDetail instance);
    partial void InserttblPatientDetail(tblPatientDetail instance);
    partial void UpdatetblPatientDetail(tblPatientDetail instance);
    partial void DeletetblPatientDetail(tblPatientDetail instance);
    partial void InserttblPatientNote(tblPatientNote instance);
    partial void UpdatetblPatientNote(tblPatientNote instance);
    partial void DeletetblPatientNote(tblPatientNote instance);
    partial void InserttblPrescriptionDetail(tblPrescriptionDetail instance);
    partial void UpdatetblPrescriptionDetail(tblPrescriptionDetail instance);
    partial void DeletetblPrescriptionDetail(tblPrescriptionDetail instance);
    partial void InserttblRoomDetail(tblRoomDetail instance);
    partial void UpdatetblRoomDetail(tblRoomDetail instance);
    partial void DeletetblRoomDetail(tblRoomDetail instance);
    partial void InserttblVisitDetail(tblVisitDetail instance);
    partial void UpdatetblVisitDetail(tblVisitDetail instance);
    partial void DeletetblVisitDetail(tblVisitDetail instance);
    #endregion
		
		public HMSDataContext() : 
				base(global::HMSLogin.Properties.Settings.Default.HospitalMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblBedDetail> tblBedDetails
		{
			get
			{
				return this.GetTable<tblBedDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblWardDetail> tblWardDetails
		{
			get
			{
				return this.GetTable<tblWardDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblBillingDetail> tblBillingDetails
		{
			get
			{
				return this.GetTable<tblBillingDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblDeptDetail> tblDeptDetails
		{
			get
			{
				return this.GetTable<tblDeptDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblDoctorDetail> tblDoctorDetails
		{
			get
			{
				return this.GetTable<tblDoctorDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblPatientDetail> tblPatientDetails
		{
			get
			{
				return this.GetTable<tblPatientDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblPatientNote> tblPatientNotes
		{
			get
			{
				return this.GetTable<tblPatientNote>();
			}
		}
		
		public System.Data.Linq.Table<tblPrescriptionDetail> tblPrescriptionDetails
		{
			get
			{
				return this.GetTable<tblPrescriptionDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblRoomDetail> tblRoomDetails
		{
			get
			{
				return this.GetTable<tblRoomDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblVisitDetail> tblVisitDetails
		{
			get
			{
				return this.GetTable<tblVisitDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBedDetails")]
	public partial class tblBedDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BedId;
		
		private int _RoomId;
		
		private EntitySet<tblVisitDetail> _tblVisitDetails;
		
		private EntityRef<tblRoomDetail> _tblRoomDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBedIdChanging(int value);
    partial void OnBedIdChanged();
    partial void OnRoomIdChanging(int value);
    partial void OnRoomIdChanged();
    #endregion
		
		public tblBedDetail()
		{
			this._tblVisitDetails = new EntitySet<tblVisitDetail>(new Action<tblVisitDetail>(this.attach_tblVisitDetails), new Action<tblVisitDetail>(this.detach_tblVisitDetails));
			this._tblRoomDetail = default(EntityRef<tblRoomDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BedId
		{
			get
			{
				return this._BedId;
			}
			set
			{
				if ((this._BedId != value))
				{
					this.OnBedIdChanging(value);
					this.SendPropertyChanging();
					this._BedId = value;
					this.SendPropertyChanged("BedId");
					this.OnBedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomId", DbType="Int NOT NULL")]
		public int RoomId
		{
			get
			{
				return this._RoomId;
			}
			set
			{
				if ((this._RoomId != value))
				{
					if (this._tblRoomDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomIdChanging(value);
					this.SendPropertyChanging();
					this._RoomId = value;
					this.SendPropertyChanged("RoomId");
					this.OnRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBedDetail_tblVisitDetail", Storage="_tblVisitDetails", ThisKey="BedId", OtherKey="BedId")]
		public EntitySet<tblVisitDetail> tblVisitDetails
		{
			get
			{
				return this._tblVisitDetails;
			}
			set
			{
				this._tblVisitDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoomDetail_tblBedDetail", Storage="_tblRoomDetail", ThisKey="RoomId", OtherKey="RoomId", IsForeignKey=true)]
		public tblRoomDetail tblRoomDetail
		{
			get
			{
				return this._tblRoomDetail.Entity;
			}
			set
			{
				tblRoomDetail previousValue = this._tblRoomDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblRoomDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblRoomDetail.Entity = null;
						previousValue.tblBedDetails.Remove(this);
					}
					this._tblRoomDetail.Entity = value;
					if ((value != null))
					{
						value.tblBedDetails.Add(this);
						this._RoomId = value.RoomId;
					}
					else
					{
						this._RoomId = default(int);
					}
					this.SendPropertyChanged("tblRoomDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblVisitDetails(tblVisitDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblBedDetail = this;
		}
		
		private void detach_tblVisitDetails(tblVisitDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblBedDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWardDetails")]
	public partial class tblWardDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WardId;
		
		private int _DeptId;
		
		private string _WardName;
		
		private EntitySet<tblRoomDetail> _tblRoomDetails;
		
		private EntityRef<tblDeptDetail> _tblDeptDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWardIdChanging(int value);
    partial void OnWardIdChanged();
    partial void OnDeptIdChanging(int value);
    partial void OnDeptIdChanged();
    partial void OnWardNameChanging(string value);
    partial void OnWardNameChanged();
    #endregion
		
		public tblWardDetail()
		{
			this._tblRoomDetails = new EntitySet<tblRoomDetail>(new Action<tblRoomDetail>(this.attach_tblRoomDetails), new Action<tblRoomDetail>(this.detach_tblRoomDetails));
			this._tblDeptDetail = default(EntityRef<tblDeptDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WardId
		{
			get
			{
				return this._WardId;
			}
			set
			{
				if ((this._WardId != value))
				{
					this.OnWardIdChanging(value);
					this.SendPropertyChanging();
					this._WardId = value;
					this.SendPropertyChanged("WardId");
					this.OnWardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptId", DbType="Int NOT NULL")]
		public int DeptId
		{
			get
			{
				return this._DeptId;
			}
			set
			{
				if ((this._DeptId != value))
				{
					if (this._tblDeptDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptIdChanging(value);
					this.SendPropertyChanging();
					this._DeptId = value;
					this.SendPropertyChanged("DeptId");
					this.OnDeptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WardName
		{
			get
			{
				return this._WardName;
			}
			set
			{
				if ((this._WardName != value))
				{
					this.OnWardNameChanging(value);
					this.SendPropertyChanging();
					this._WardName = value;
					this.SendPropertyChanged("WardName");
					this.OnWardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWardDetail_tblRoomDetail", Storage="_tblRoomDetails", ThisKey="WardId", OtherKey="WardId")]
		public EntitySet<tblRoomDetail> tblRoomDetails
		{
			get
			{
				return this._tblRoomDetails;
			}
			set
			{
				this._tblRoomDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDeptDetail_tblWardDetail", Storage="_tblDeptDetail", ThisKey="DeptId", OtherKey="DeptId", IsForeignKey=true)]
		public tblDeptDetail tblDeptDetail
		{
			get
			{
				return this._tblDeptDetail.Entity;
			}
			set
			{
				tblDeptDetail previousValue = this._tblDeptDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblDeptDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDeptDetail.Entity = null;
						previousValue.tblWardDetails.Remove(this);
					}
					this._tblDeptDetail.Entity = value;
					if ((value != null))
					{
						value.tblWardDetails.Add(this);
						this._DeptId = value.DeptId;
					}
					else
					{
						this._DeptId = default(int);
					}
					this.SendPropertyChanged("tblDeptDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblRoomDetails(tblRoomDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblWardDetail = this;
		}
		
		private void detach_tblRoomDetails(tblRoomDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblWardDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBillingDetails")]
	public partial class tblBillingDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VisitId;
		
		private System.DateTime _BillingDate;
		
		private int _PatientId;
		
		private decimal _RoomCharge;
		
		private decimal _DoctorsFee;
		
		private string _BillingNote;
		
		private decimal _MiscBillingFee;
		
		private EntityRef<tblVisitDetail> _tblVisitDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitIdChanging(int value);
    partial void OnVisitIdChanged();
    partial void OnBillingDateChanging(System.DateTime value);
    partial void OnBillingDateChanged();
    partial void OnPatientIdChanging(int value);
    partial void OnPatientIdChanged();
    partial void OnRoomChargeChanging(decimal value);
    partial void OnRoomChargeChanged();
    partial void OnDoctorsFeeChanging(decimal value);
    partial void OnDoctorsFeeChanged();
    partial void OnBillingNoteChanging(string value);
    partial void OnBillingNoteChanged();
    partial void OnMiscBillingFeeChanging(decimal value);
    partial void OnMiscBillingFeeChanged();
    #endregion
		
		public tblBillingDetail()
		{
			this._tblVisitDetail = default(EntityRef<tblVisitDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					if (this._tblVisitDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingDate", DbType="DateTime NOT NULL")]
		public System.DateTime BillingDate
		{
			get
			{
				return this._BillingDate;
			}
			set
			{
				if ((this._BillingDate != value))
				{
					this.OnBillingDateChanging(value);
					this.SendPropertyChanging();
					this._BillingDate = value;
					this.SendPropertyChanged("BillingDate");
					this.OnBillingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", DbType="Int NOT NULL")]
		public int PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCharge", DbType="Decimal(18,2) NOT NULL")]
		public decimal RoomCharge
		{
			get
			{
				return this._RoomCharge;
			}
			set
			{
				if ((this._RoomCharge != value))
				{
					this.OnRoomChargeChanging(value);
					this.SendPropertyChanging();
					this._RoomCharge = value;
					this.SendPropertyChanged("RoomCharge");
					this.OnRoomChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorsFee", DbType="Decimal(18,2) NOT NULL")]
		public decimal DoctorsFee
		{
			get
			{
				return this._DoctorsFee;
			}
			set
			{
				if ((this._DoctorsFee != value))
				{
					this.OnDoctorsFeeChanging(value);
					this.SendPropertyChanging();
					this._DoctorsFee = value;
					this.SendPropertyChanged("DoctorsFee");
					this.OnDoctorsFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingNote", DbType="NVarChar(MAX)")]
		public string BillingNote
		{
			get
			{
				return this._BillingNote;
			}
			set
			{
				if ((this._BillingNote != value))
				{
					this.OnBillingNoteChanging(value);
					this.SendPropertyChanging();
					this._BillingNote = value;
					this.SendPropertyChanged("BillingNote");
					this.OnBillingNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiscBillingFee", DbType="Decimal(18,2) NOT NULL")]
		public decimal MiscBillingFee
		{
			get
			{
				return this._MiscBillingFee;
			}
			set
			{
				if ((this._MiscBillingFee != value))
				{
					this.OnMiscBillingFeeChanging(value);
					this.SendPropertyChanging();
					this._MiscBillingFee = value;
					this.SendPropertyChanged("MiscBillingFee");
					this.OnMiscBillingFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVisitDetail_tblBillingDetail", Storage="_tblVisitDetail", ThisKey="VisitId", OtherKey="VisitId", IsForeignKey=true)]
		public tblVisitDetail tblVisitDetail
		{
			get
			{
				return this._tblVisitDetail.Entity;
			}
			set
			{
				tblVisitDetail previousValue = this._tblVisitDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblVisitDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblVisitDetail.Entity = null;
						previousValue.tblBillingDetail = null;
					}
					this._tblVisitDetail.Entity = value;
					if ((value != null))
					{
						value.tblBillingDetail = this;
						this._VisitId = value.VisitId;
					}
					else
					{
						this._VisitId = default(int);
					}
					this.SendPropertyChanged("tblVisitDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDeptDetails")]
	public partial class tblDeptDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeptId;
		
		private string _DeptName;
		
		private EntitySet<tblWardDetail> _tblWardDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeptIdChanging(int value);
    partial void OnDeptIdChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    #endregion
		
		public tblDeptDetail()
		{
			this._tblWardDetails = new EntitySet<tblWardDetail>(new Action<tblWardDetail>(this.attach_tblWardDetails), new Action<tblWardDetail>(this.detach_tblWardDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeptId
		{
			get
			{
				return this._DeptId;
			}
			set
			{
				if ((this._DeptId != value))
				{
					this.OnDeptIdChanging(value);
					this.SendPropertyChanging();
					this._DeptId = value;
					this.SendPropertyChanged("DeptId");
					this.OnDeptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeptName
		{
			get
			{
				return this._DeptName;
			}
			set
			{
				if ((this._DeptName != value))
				{
					this.OnDeptNameChanging(value);
					this.SendPropertyChanging();
					this._DeptName = value;
					this.SendPropertyChanged("DeptName");
					this.OnDeptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDeptDetail_tblWardDetail", Storage="_tblWardDetails", ThisKey="DeptId", OtherKey="DeptId")]
		public EntitySet<tblWardDetail> tblWardDetails
		{
			get
			{
				return this._tblWardDetails;
			}
			set
			{
				this._tblWardDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblWardDetails(tblWardDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblDeptDetail = this;
		}
		
		private void detach_tblWardDetails(tblWardDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblDeptDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDoctorDetails")]
	public partial class tblDoctorDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocId;
		
		private string _DocForename;
		
		private string _DocSurname;
		
		private System.Data.Linq.Binary _DocPhoto;
		
		private bool _DocGender;
		
		private string _DocAddress;
		
		private string _DocPhoneNumber;
		
		private string _DocQualification;
		
		private int _DeptId;
		
		private EntitySet<tblVisitDetail> _tblVisitDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIdChanging(int value);
    partial void OnDocIdChanged();
    partial void OnDocForenameChanging(string value);
    partial void OnDocForenameChanged();
    partial void OnDocSurnameChanging(string value);
    partial void OnDocSurnameChanged();
    partial void OnDocPhotoChanging(System.Data.Linq.Binary value);
    partial void OnDocPhotoChanged();
    partial void OnDocGenderChanging(bool value);
    partial void OnDocGenderChanged();
    partial void OnDocAddressChanging(string value);
    partial void OnDocAddressChanged();
    partial void OnDocPhoneNumberChanging(string value);
    partial void OnDocPhoneNumberChanged();
    partial void OnDocQualificationChanging(string value);
    partial void OnDocQualificationChanged();
    partial void OnDeptIdChanging(int value);
    partial void OnDeptIdChanged();
    #endregion
		
		public tblDoctorDetail()
		{
			this._tblVisitDetails = new EntitySet<tblVisitDetail>(new Action<tblVisitDetail>(this.attach_tblVisitDetails), new Action<tblVisitDetail>(this.detach_tblVisitDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocId
		{
			get
			{
				return this._DocId;
			}
			set
			{
				if ((this._DocId != value))
				{
					this.OnDocIdChanging(value);
					this.SendPropertyChanging();
					this._DocId = value;
					this.SendPropertyChanged("DocId");
					this.OnDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocForename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocForename
		{
			get
			{
				return this._DocForename;
			}
			set
			{
				if ((this._DocForename != value))
				{
					this.OnDocForenameChanging(value);
					this.SendPropertyChanging();
					this._DocForename = value;
					this.SendPropertyChanged("DocForename");
					this.OnDocForenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocSurname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocSurname
		{
			get
			{
				return this._DocSurname;
			}
			set
			{
				if ((this._DocSurname != value))
				{
					this.OnDocSurnameChanging(value);
					this.SendPropertyChanging();
					this._DocSurname = value;
					this.SendPropertyChanged("DocSurname");
					this.OnDocSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocPhoto", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DocPhoto
		{
			get
			{
				return this._DocPhoto;
			}
			set
			{
				if ((this._DocPhoto != value))
				{
					this.OnDocPhotoChanging(value);
					this.SendPropertyChanging();
					this._DocPhoto = value;
					this.SendPropertyChanged("DocPhoto");
					this.OnDocPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocGender", DbType="Bit NOT NULL")]
		public bool DocGender
		{
			get
			{
				return this._DocGender;
			}
			set
			{
				if ((this._DocGender != value))
				{
					this.OnDocGenderChanging(value);
					this.SendPropertyChanging();
					this._DocGender = value;
					this.SendPropertyChanged("DocGender");
					this.OnDocGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DocAddress
		{
			get
			{
				return this._DocAddress;
			}
			set
			{
				if ((this._DocAddress != value))
				{
					this.OnDocAddressChanging(value);
					this.SendPropertyChanging();
					this._DocAddress = value;
					this.SendPropertyChanged("DocAddress");
					this.OnDocAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocPhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocPhoneNumber
		{
			get
			{
				return this._DocPhoneNumber;
			}
			set
			{
				if ((this._DocPhoneNumber != value))
				{
					this.OnDocPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._DocPhoneNumber = value;
					this.SendPropertyChanged("DocPhoneNumber");
					this.OnDocPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocQualification", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocQualification
		{
			get
			{
				return this._DocQualification;
			}
			set
			{
				if ((this._DocQualification != value))
				{
					this.OnDocQualificationChanging(value);
					this.SendPropertyChanging();
					this._DocQualification = value;
					this.SendPropertyChanged("DocQualification");
					this.OnDocQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptId", DbType="Int NOT NULL")]
		public int DeptId
		{
			get
			{
				return this._DeptId;
			}
			set
			{
				if ((this._DeptId != value))
				{
					this.OnDeptIdChanging(value);
					this.SendPropertyChanging();
					this._DeptId = value;
					this.SendPropertyChanged("DeptId");
					this.OnDeptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDoctorDetail_tblVisitDetail", Storage="_tblVisitDetails", ThisKey="DocId", OtherKey="DocId")]
		public EntitySet<tblVisitDetail> tblVisitDetails
		{
			get
			{
				return this._tblVisitDetails;
			}
			set
			{
				this._tblVisitDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblVisitDetails(tblVisitDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblDoctorDetail = this;
		}
		
		private void detach_tblVisitDetails(tblVisitDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblDoctorDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPatientDetails")]
	public partial class tblPatientDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PatientId;
		
		private string _PatientForename;
		
		private string _PatientSurename;
		
		private System.DateTime _PatientDOB;
		
		private bool _PatientGender;
		
		private string _PatientAddress;
		
		private string _PatientPhoneNum;
		
		private string _PatientNOK;
		
		private EntitySet<tblPatientNote> _tblPatientNotes;
		
		private EntitySet<tblPrescriptionDetail> _tblPrescriptionDetails;
		
		private EntitySet<tblVisitDetail> _tblVisitDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIdChanging(int value);
    partial void OnPatientIdChanged();
    partial void OnPatientForenameChanging(string value);
    partial void OnPatientForenameChanged();
    partial void OnPatientSurenameChanging(string value);
    partial void OnPatientSurenameChanged();
    partial void OnPatientDOBChanging(System.DateTime value);
    partial void OnPatientDOBChanged();
    partial void OnPatientGenderChanging(bool value);
    partial void OnPatientGenderChanged();
    partial void OnPatientAddressChanging(string value);
    partial void OnPatientAddressChanged();
    partial void OnPatientPhoneNumChanging(string value);
    partial void OnPatientPhoneNumChanged();
    partial void OnPatientNOKChanging(string value);
    partial void OnPatientNOKChanged();
    #endregion
		
		public tblPatientDetail()
		{
			this._tblPatientNotes = new EntitySet<tblPatientNote>(new Action<tblPatientNote>(this.attach_tblPatientNotes), new Action<tblPatientNote>(this.detach_tblPatientNotes));
			this._tblPrescriptionDetails = new EntitySet<tblPrescriptionDetail>(new Action<tblPrescriptionDetail>(this.attach_tblPrescriptionDetails), new Action<tblPrescriptionDetail>(this.detach_tblPrescriptionDetails));
			this._tblVisitDetails = new EntitySet<tblVisitDetail>(new Action<tblVisitDetail>(this.attach_tblVisitDetails), new Action<tblVisitDetail>(this.detach_tblVisitDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientForename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientForename
		{
			get
			{
				return this._PatientForename;
			}
			set
			{
				if ((this._PatientForename != value))
				{
					this.OnPatientForenameChanging(value);
					this.SendPropertyChanging();
					this._PatientForename = value;
					this.SendPropertyChanged("PatientForename");
					this.OnPatientForenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientSurename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientSurename
		{
			get
			{
				return this._PatientSurename;
			}
			set
			{
				if ((this._PatientSurename != value))
				{
					this.OnPatientSurenameChanging(value);
					this.SendPropertyChanging();
					this._PatientSurename = value;
					this.SendPropertyChanged("PatientSurename");
					this.OnPatientSurenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientDOB", DbType="DateTime NOT NULL")]
		public System.DateTime PatientDOB
		{
			get
			{
				return this._PatientDOB;
			}
			set
			{
				if ((this._PatientDOB != value))
				{
					this.OnPatientDOBChanging(value);
					this.SendPropertyChanging();
					this._PatientDOB = value;
					this.SendPropertyChanged("PatientDOB");
					this.OnPatientDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientGender", DbType="Bit NOT NULL")]
		public bool PatientGender
		{
			get
			{
				return this._PatientGender;
			}
			set
			{
				if ((this._PatientGender != value))
				{
					this.OnPatientGenderChanging(value);
					this.SendPropertyChanging();
					this._PatientGender = value;
					this.SendPropertyChanged("PatientGender");
					this.OnPatientGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PatientAddress
		{
			get
			{
				return this._PatientAddress;
			}
			set
			{
				if ((this._PatientAddress != value))
				{
					this.OnPatientAddressChanging(value);
					this.SendPropertyChanging();
					this._PatientAddress = value;
					this.SendPropertyChanged("PatientAddress");
					this.OnPatientAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientPhoneNum", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PatientPhoneNum
		{
			get
			{
				return this._PatientPhoneNum;
			}
			set
			{
				if ((this._PatientPhoneNum != value))
				{
					this.OnPatientPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._PatientPhoneNum = value;
					this.SendPropertyChanged("PatientPhoneNum");
					this.OnPatientPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientNOK", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PatientNOK
		{
			get
			{
				return this._PatientNOK;
			}
			set
			{
				if ((this._PatientNOK != value))
				{
					this.OnPatientNOKChanging(value);
					this.SendPropertyChanging();
					this._PatientNOK = value;
					this.SendPropertyChanged("PatientNOK");
					this.OnPatientNOKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatientDetail_tblPatientNote", Storage="_tblPatientNotes", ThisKey="PatientId", OtherKey="PatientId")]
		public EntitySet<tblPatientNote> tblPatientNotes
		{
			get
			{
				return this._tblPatientNotes;
			}
			set
			{
				this._tblPatientNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatientDetail_tblPrescriptionDetail", Storage="_tblPrescriptionDetails", ThisKey="PatientId", OtherKey="PatientId")]
		public EntitySet<tblPrescriptionDetail> tblPrescriptionDetails
		{
			get
			{
				return this._tblPrescriptionDetails;
			}
			set
			{
				this._tblPrescriptionDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatientDetail_tblVisitDetail", Storage="_tblVisitDetails", ThisKey="PatientId", OtherKey="PatientId")]
		public EntitySet<tblVisitDetail> tblVisitDetails
		{
			get
			{
				return this._tblVisitDetails;
			}
			set
			{
				this._tblVisitDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPatientNotes(tblPatientNote entity)
		{
			this.SendPropertyChanging();
			entity.tblPatientDetail = this;
		}
		
		private void detach_tblPatientNotes(tblPatientNote entity)
		{
			this.SendPropertyChanging();
			entity.tblPatientDetail = null;
		}
		
		private void attach_tblPrescriptionDetails(tblPrescriptionDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblPatientDetail = this;
		}
		
		private void detach_tblPrescriptionDetails(tblPrescriptionDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblPatientDetail = null;
		}
		
		private void attach_tblVisitDetails(tblVisitDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblPatientDetail = this;
		}
		
		private void detach_tblVisitDetails(tblVisitDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblPatientDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPatientNotes")]
	public partial class tblPatientNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PatientNoteId;
		
		private int _PatientId;
		
		private System.DateTime _NoteDate;
		
		private string _PatientNotes;
		
		private EntityRef<tblPatientDetail> _tblPatientDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientNoteIdChanging(int value);
    partial void OnPatientNoteIdChanged();
    partial void OnPatientIdChanging(int value);
    partial void OnPatientIdChanged();
    partial void OnNoteDateChanging(System.DateTime value);
    partial void OnNoteDateChanged();
    partial void OnPatientNotesChanging(string value);
    partial void OnPatientNotesChanged();
    #endregion
		
		public tblPatientNote()
		{
			this._tblPatientDetail = default(EntityRef<tblPatientDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientNoteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PatientNoteId
		{
			get
			{
				return this._PatientNoteId;
			}
			set
			{
				if ((this._PatientNoteId != value))
				{
					this.OnPatientNoteIdChanging(value);
					this.SendPropertyChanging();
					this._PatientNoteId = value;
					this.SendPropertyChanged("PatientNoteId");
					this.OnPatientNoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", DbType="Int NOT NULL")]
		public int PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					if (this._tblPatientDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteDate", DbType="DateTime NOT NULL")]
		public System.DateTime NoteDate
		{
			get
			{
				return this._NoteDate;
			}
			set
			{
				if ((this._NoteDate != value))
				{
					this.OnNoteDateChanging(value);
					this.SendPropertyChanging();
					this._NoteDate = value;
					this.SendPropertyChanged("NoteDate");
					this.OnNoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientNotes", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PatientNotes
		{
			get
			{
				return this._PatientNotes;
			}
			set
			{
				if ((this._PatientNotes != value))
				{
					this.OnPatientNotesChanging(value);
					this.SendPropertyChanging();
					this._PatientNotes = value;
					this.SendPropertyChanged("PatientNotes");
					this.OnPatientNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatientDetail_tblPatientNote", Storage="_tblPatientDetail", ThisKey="PatientId", OtherKey="PatientId", IsForeignKey=true)]
		public tblPatientDetail tblPatientDetail
		{
			get
			{
				return this._tblPatientDetail.Entity;
			}
			set
			{
				tblPatientDetail previousValue = this._tblPatientDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblPatientDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPatientDetail.Entity = null;
						previousValue.tblPatientNotes.Remove(this);
					}
					this._tblPatientDetail.Entity = value;
					if ((value != null))
					{
						value.tblPatientNotes.Add(this);
						this._PatientId = value.PatientId;
					}
					else
					{
						this._PatientId = default(int);
					}
					this.SendPropertyChanged("tblPatientDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPrescriptionDetails")]
	public partial class tblPrescriptionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrescriptionId;
		
		private int _PatientId;
		
		private System.DateTime _PrescriptionDate;
		
		private string _PrescriptionNotes;
		
		private EntityRef<tblPatientDetail> _tblPatientDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrescriptionIdChanging(int value);
    partial void OnPrescriptionIdChanged();
    partial void OnPatientIdChanging(int value);
    partial void OnPatientIdChanged();
    partial void OnPrescriptionDateChanging(System.DateTime value);
    partial void OnPrescriptionDateChanged();
    partial void OnPrescriptionNotesChanging(string value);
    partial void OnPrescriptionNotesChanged();
    #endregion
		
		public tblPrescriptionDetail()
		{
			this._tblPatientDetail = default(EntityRef<tblPatientDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrescriptionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PrescriptionId
		{
			get
			{
				return this._PrescriptionId;
			}
			set
			{
				if ((this._PrescriptionId != value))
				{
					this.OnPrescriptionIdChanging(value);
					this.SendPropertyChanging();
					this._PrescriptionId = value;
					this.SendPropertyChanged("PrescriptionId");
					this.OnPrescriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", DbType="Int NOT NULL")]
		public int PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					if (this._tblPatientDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrescriptionDate", DbType="DateTime NOT NULL")]
		public System.DateTime PrescriptionDate
		{
			get
			{
				return this._PrescriptionDate;
			}
			set
			{
				if ((this._PrescriptionDate != value))
				{
					this.OnPrescriptionDateChanging(value);
					this.SendPropertyChanging();
					this._PrescriptionDate = value;
					this.SendPropertyChanged("PrescriptionDate");
					this.OnPrescriptionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrescriptionNotes", DbType="NChar(10)")]
		public string PrescriptionNotes
		{
			get
			{
				return this._PrescriptionNotes;
			}
			set
			{
				if ((this._PrescriptionNotes != value))
				{
					this.OnPrescriptionNotesChanging(value);
					this.SendPropertyChanging();
					this._PrescriptionNotes = value;
					this.SendPropertyChanged("PrescriptionNotes");
					this.OnPrescriptionNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatientDetail_tblPrescriptionDetail", Storage="_tblPatientDetail", ThisKey="PatientId", OtherKey="PatientId", IsForeignKey=true)]
		public tblPatientDetail tblPatientDetail
		{
			get
			{
				return this._tblPatientDetail.Entity;
			}
			set
			{
				tblPatientDetail previousValue = this._tblPatientDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblPatientDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPatientDetail.Entity = null;
						previousValue.tblPrescriptionDetails.Remove(this);
					}
					this._tblPatientDetail.Entity = value;
					if ((value != null))
					{
						value.tblPrescriptionDetails.Add(this);
						this._PatientId = value.PatientId;
					}
					else
					{
						this._PatientId = default(int);
					}
					this.SendPropertyChanged("tblPatientDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoomDetails")]
	public partial class tblRoomDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoomId;
		
		private int _WardId;
		
		private int _RoomType;
		
		private EntitySet<tblBedDetail> _tblBedDetails;
		
		private EntityRef<tblWardDetail> _tblWardDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomIdChanging(int value);
    partial void OnRoomIdChanged();
    partial void OnWardIdChanging(int value);
    partial void OnWardIdChanged();
    partial void OnRoomTypeChanging(int value);
    partial void OnRoomTypeChanged();
    #endregion
		
		public tblRoomDetail()
		{
			this._tblBedDetails = new EntitySet<tblBedDetail>(new Action<tblBedDetail>(this.attach_tblBedDetails), new Action<tblBedDetail>(this.detach_tblBedDetails));
			this._tblWardDetail = default(EntityRef<tblWardDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoomId
		{
			get
			{
				return this._RoomId;
			}
			set
			{
				if ((this._RoomId != value))
				{
					this.OnRoomIdChanging(value);
					this.SendPropertyChanging();
					this._RoomId = value;
					this.SendPropertyChanged("RoomId");
					this.OnRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardId", DbType="Int NOT NULL")]
		public int WardId
		{
			get
			{
				return this._WardId;
			}
			set
			{
				if ((this._WardId != value))
				{
					if (this._tblWardDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWardIdChanging(value);
					this.SendPropertyChanging();
					this._WardId = value;
					this.SendPropertyChanged("WardId");
					this.OnWardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="Int NOT NULL")]
		public int RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblRoomDetail_tblBedDetail", Storage="_tblBedDetails", ThisKey="RoomId", OtherKey="RoomId")]
		public EntitySet<tblBedDetail> tblBedDetails
		{
			get
			{
				return this._tblBedDetails;
			}
			set
			{
				this._tblBedDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWardDetail_tblRoomDetail", Storage="_tblWardDetail", ThisKey="WardId", OtherKey="WardId", IsForeignKey=true)]
		public tblWardDetail tblWardDetail
		{
			get
			{
				return this._tblWardDetail.Entity;
			}
			set
			{
				tblWardDetail previousValue = this._tblWardDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblWardDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblWardDetail.Entity = null;
						previousValue.tblRoomDetails.Remove(this);
					}
					this._tblWardDetail.Entity = value;
					if ((value != null))
					{
						value.tblRoomDetails.Add(this);
						this._WardId = value.WardId;
					}
					else
					{
						this._WardId = default(int);
					}
					this.SendPropertyChanged("tblWardDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblBedDetails(tblBedDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblRoomDetail = this;
		}
		
		private void detach_tblBedDetails(tblBedDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblRoomDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblVisitDetails")]
	public partial class tblVisitDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VisitId;
		
		private int _PatientId;
		
		private int _DocId;
		
		private int _DeptId;
		
		private System.Nullable<System.DateTime> _AdmissionDate;
		
		private System.Nullable<System.DateTime> _DischargeDate;
		
		private int _BedId;
		
		private System.Nullable<System.DateTime> _VisitTime;
		
		private EntityRef<tblBillingDetail> _tblBillingDetail;
		
		private EntityRef<tblBedDetail> _tblBedDetail;
		
		private EntityRef<tblDoctorDetail> _tblDoctorDetail;
		
		private EntityRef<tblPatientDetail> _tblPatientDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitIdChanging(int value);
    partial void OnVisitIdChanged();
    partial void OnPatientIdChanging(int value);
    partial void OnPatientIdChanged();
    partial void OnDocIdChanging(int value);
    partial void OnDocIdChanged();
    partial void OnDeptIdChanging(int value);
    partial void OnDeptIdChanged();
    partial void OnAdmissionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdmissionDateChanged();
    partial void OnDischargeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDischargeDateChanged();
    partial void OnBedIdChanging(int value);
    partial void OnBedIdChanged();
    partial void OnVisitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnVisitTimeChanged();
    #endregion
		
		public tblVisitDetail()
		{
			this._tblBillingDetail = default(EntityRef<tblBillingDetail>);
			this._tblBedDetail = default(EntityRef<tblBedDetail>);
			this._tblDoctorDetail = default(EntityRef<tblDoctorDetail>);
			this._tblPatientDetail = default(EntityRef<tblPatientDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VisitId
		{
			get
			{
				return this._VisitId;
			}
			set
			{
				if ((this._VisitId != value))
				{
					this.OnVisitIdChanging(value);
					this.SendPropertyChanging();
					this._VisitId = value;
					this.SendPropertyChanged("VisitId");
					this.OnVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", DbType="Int NOT NULL")]
		public int PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					if (this._tblPatientDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocId", DbType="Int NOT NULL")]
		public int DocId
		{
			get
			{
				return this._DocId;
			}
			set
			{
				if ((this._DocId != value))
				{
					if (this._tblDoctorDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIdChanging(value);
					this.SendPropertyChanging();
					this._DocId = value;
					this.SendPropertyChanged("DocId");
					this.OnDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptId", DbType="Int NOT NULL")]
		public int DeptId
		{
			get
			{
				return this._DeptId;
			}
			set
			{
				if ((this._DeptId != value))
				{
					this.OnDeptIdChanging(value);
					this.SendPropertyChanging();
					this._DeptId = value;
					this.SendPropertyChanged("DeptId");
					this.OnDeptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AdmissionDate
		{
			get
			{
				return this._AdmissionDate;
			}
			set
			{
				if ((this._AdmissionDate != value))
				{
					this.OnAdmissionDateChanging(value);
					this.SendPropertyChanging();
					this._AdmissionDate = value;
					this.SendPropertyChanged("AdmissionDate");
					this.OnAdmissionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this.OnDischargeDateChanging(value);
					this.SendPropertyChanging();
					this._DischargeDate = value;
					this.SendPropertyChanged("DischargeDate");
					this.OnDischargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedId", DbType="Int NOT NULL")]
		public int BedId
		{
			get
			{
				return this._BedId;
			}
			set
			{
				if ((this._BedId != value))
				{
					if (this._tblBedDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBedIdChanging(value);
					this.SendPropertyChanging();
					this._BedId = value;
					this.SendPropertyChanged("BedId");
					this.OnBedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> VisitTime
		{
			get
			{
				return this._VisitTime;
			}
			set
			{
				if ((this._VisitTime != value))
				{
					this.OnVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._VisitTime = value;
					this.SendPropertyChanged("VisitTime");
					this.OnVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVisitDetail_tblBillingDetail", Storage="_tblBillingDetail", ThisKey="VisitId", OtherKey="VisitId", IsUnique=true, IsForeignKey=false)]
		public tblBillingDetail tblBillingDetail
		{
			get
			{
				return this._tblBillingDetail.Entity;
			}
			set
			{
				tblBillingDetail previousValue = this._tblBillingDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblBillingDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblBillingDetail.Entity = null;
						previousValue.tblVisitDetail = null;
					}
					this._tblBillingDetail.Entity = value;
					if ((value != null))
					{
						value.tblVisitDetail = this;
					}
					this.SendPropertyChanged("tblBillingDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBedDetail_tblVisitDetail", Storage="_tblBedDetail", ThisKey="BedId", OtherKey="BedId", IsForeignKey=true)]
		public tblBedDetail tblBedDetail
		{
			get
			{
				return this._tblBedDetail.Entity;
			}
			set
			{
				tblBedDetail previousValue = this._tblBedDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblBedDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblBedDetail.Entity = null;
						previousValue.tblVisitDetails.Remove(this);
					}
					this._tblBedDetail.Entity = value;
					if ((value != null))
					{
						value.tblVisitDetails.Add(this);
						this._BedId = value.BedId;
					}
					else
					{
						this._BedId = default(int);
					}
					this.SendPropertyChanged("tblBedDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDoctorDetail_tblVisitDetail", Storage="_tblDoctorDetail", ThisKey="DocId", OtherKey="DocId", IsForeignKey=true)]
		public tblDoctorDetail tblDoctorDetail
		{
			get
			{
				return this._tblDoctorDetail.Entity;
			}
			set
			{
				tblDoctorDetail previousValue = this._tblDoctorDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblDoctorDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDoctorDetail.Entity = null;
						previousValue.tblVisitDetails.Remove(this);
					}
					this._tblDoctorDetail.Entity = value;
					if ((value != null))
					{
						value.tblVisitDetails.Add(this);
						this._DocId = value.DocId;
					}
					else
					{
						this._DocId = default(int);
					}
					this.SendPropertyChanged("tblDoctorDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPatientDetail_tblVisitDetail", Storage="_tblPatientDetail", ThisKey="PatientId", OtherKey="PatientId", IsForeignKey=true)]
		public tblPatientDetail tblPatientDetail
		{
			get
			{
				return this._tblPatientDetail.Entity;
			}
			set
			{
				tblPatientDetail previousValue = this._tblPatientDetail.Entity;
				if (((previousValue != value) 
							|| (this._tblPatientDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPatientDetail.Entity = null;
						previousValue.tblVisitDetails.Remove(this);
					}
					this._tblPatientDetail.Entity = value;
					if ((value != null))
					{
						value.tblVisitDetails.Add(this);
						this._PatientId = value.PatientId;
					}
					else
					{
						this._PatientId = default(int);
					}
					this.SendPropertyChanged("tblPatientDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
